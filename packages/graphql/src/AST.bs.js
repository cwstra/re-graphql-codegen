// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function loc(r) {
  return r.loc;
}

function value(r) {
  return r.value;
}

var NameNode = {
  loc: loc,
  value: value
};

var VariableNode = {};

var IntValueNode = {};

var FloatValueNode = {};

var StringValueNode = {};

var BooleanValueNode = {};

var NullValueNode = {};

var EnumValueNode = {};

var ValueNode = {};

function loc$1(r) {
  return r.loc;
}

function name(r) {
  return r.name;
}

var NamedTypeNode = {
  loc: loc$1,
  name: name
};

var TypeNode = {};

var ArgumentNode = {};

var DirectiveNode = {};

var VariableDefinitionNode = {};

var SelectionSetNode = {};

var OperationTypeDefinitionNode = {};

var InputValueDefinitionNode = {};

var FieldDefinitionNode = {};

var EnumValueDefinitionNode = {};

var OperationDefinitionNode = {};

var FragmentDefinitionNode = {};

var ExecutableDefinitionNode = {};

var SchemaDefinitionNode = {};

var ScalarTypeDefinitionNode = {};

var ObjectTypeDefinitionNode = {};

var InterfaceTypeDefinitionNode = {};

var UnionTypeDefinitionNode = {};

var EnumTypeDefinitionNode = {};

var InputObjectTypeDefinitionNode = {};

var TypeDefinitionNode = {};

var DirectiveDefinitionNode = {};

var TypeSystemDefinitionNode = {};

var SchemaExtensionNode = {};

var ScalarTypeExtensionNode = {};

var ObjectTypeExtensionNode = {};

var InterfaceTypeExtensionNode = {};

var UnionTypeExtensionNode = {};

var EnumTypeExtensionNode = {};

var InputObjectTypeExtensionNode = {};

var TypeExtensionNode = {};

var TypeSystemExtensionNode = {};

var DefinitionNode = {};

var DocumentNode = {};

exports.NameNode = NameNode;
exports.VariableNode = VariableNode;
exports.IntValueNode = IntValueNode;
exports.FloatValueNode = FloatValueNode;
exports.StringValueNode = StringValueNode;
exports.BooleanValueNode = BooleanValueNode;
exports.NullValueNode = NullValueNode;
exports.EnumValueNode = EnumValueNode;
exports.ValueNode = ValueNode;
exports.NamedTypeNode = NamedTypeNode;
exports.TypeNode = TypeNode;
exports.ArgumentNode = ArgumentNode;
exports.DirectiveNode = DirectiveNode;
exports.VariableDefinitionNode = VariableDefinitionNode;
exports.SelectionSetNode = SelectionSetNode;
exports.OperationTypeDefinitionNode = OperationTypeDefinitionNode;
exports.InputValueDefinitionNode = InputValueDefinitionNode;
exports.FieldDefinitionNode = FieldDefinitionNode;
exports.EnumValueDefinitionNode = EnumValueDefinitionNode;
exports.OperationDefinitionNode = OperationDefinitionNode;
exports.FragmentDefinitionNode = FragmentDefinitionNode;
exports.ExecutableDefinitionNode = ExecutableDefinitionNode;
exports.SchemaDefinitionNode = SchemaDefinitionNode;
exports.ScalarTypeDefinitionNode = ScalarTypeDefinitionNode;
exports.ObjectTypeDefinitionNode = ObjectTypeDefinitionNode;
exports.InterfaceTypeDefinitionNode = InterfaceTypeDefinitionNode;
exports.UnionTypeDefinitionNode = UnionTypeDefinitionNode;
exports.EnumTypeDefinitionNode = EnumTypeDefinitionNode;
exports.InputObjectTypeDefinitionNode = InputObjectTypeDefinitionNode;
exports.TypeDefinitionNode = TypeDefinitionNode;
exports.DirectiveDefinitionNode = DirectiveDefinitionNode;
exports.TypeSystemDefinitionNode = TypeSystemDefinitionNode;
exports.SchemaExtensionNode = SchemaExtensionNode;
exports.ScalarTypeExtensionNode = ScalarTypeExtensionNode;
exports.ObjectTypeExtensionNode = ObjectTypeExtensionNode;
exports.InterfaceTypeExtensionNode = InterfaceTypeExtensionNode;
exports.UnionTypeExtensionNode = UnionTypeExtensionNode;
exports.EnumTypeExtensionNode = EnumTypeExtensionNode;
exports.InputObjectTypeExtensionNode = InputObjectTypeExtensionNode;
exports.TypeExtensionNode = TypeExtensionNode;
exports.TypeSystemExtensionNode = TypeSystemExtensionNode;
exports.DefinitionNode = DefinitionNode;
exports.DocumentNode = DocumentNode;
/* No side effect */
